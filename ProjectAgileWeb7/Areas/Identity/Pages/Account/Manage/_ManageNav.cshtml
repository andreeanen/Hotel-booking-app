@inject SignInManager<ApplicationUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<ul class="nav nav-pills flex-column">
    <li class="nav-item"><a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">Profile</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">Password</a></li>
    @if (hasExternalLogins)
    {
        <li id="external-logins" class="nav-item"><a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">External logins</a></li>
    }
    <li class="nav-item"><a class="nav-link" asp-action="MyBookings" asp-controller="MyBookings">My Bookings</a></li>
    <li class="nav-item"><a class="nav-link" asp-action="Favorites" asp-controller="Favorites">My Favorites</a></li>

</ul>
@if (User.IsInRole("Admin"))
{
    <hr />
    <ul class="nav nav-pills flex-column">
        <li class="nav-item"><a class="nav-link" asp-action="Index" asp-controller="AdminHotels">Manage Hotels</a></li>
        <li class="nav-item"><a class="nav-link" asp-action="Index" asp-controller="AdminRooms">Manage Rooms</a></li>
        <li class="nav-item"><a class="nav-link" asp-action="Index" asp-controller="AdminHotelFacilities">Manage Facilities</a></li>

    </ul>
    <hr />
}
